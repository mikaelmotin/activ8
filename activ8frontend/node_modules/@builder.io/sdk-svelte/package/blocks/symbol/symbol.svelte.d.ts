import { SvelteComponentTyped } from "svelte";
export interface SymbolInfo {
    model?: string;
    entry?: string;
    data?: any;
    content?: BuilderContent;
    inline?: boolean;
    dynamic?: boolean;
}
export interface SymbolProps {
    symbol?: SymbolInfo;
    dataOnly?: boolean;
    dynamic?: boolean;
    builderBlock?: BuilderBlock;
    attributes?: any;
    inheritState?: boolean;
}
import { BuilderContent } from "../../types/builder-content.js";
import { BuilderBlock } from "../../types/builder-block.js";
declare const __propDef: {
    props: {
        attributes: SymbolProps["attributes"];
        symbol: SymbolProps["symbol"];
        dynamic: SymbolProps["dynamic"];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export type SymbolProps = typeof __propDef.props;
export type SymbolEvents = typeof __propDef.events;
export type SymbolSlots = typeof __propDef.slots;
export default class Symbol extends SvelteComponentTyped<SymbolProps, SymbolEvents, SymbolSlots> {
}
export {};
