import { SvelteComponentTyped } from "svelte";
type Column = {
    blocks: BuilderBlock[];
    width?: number;
};
type StackColumnsAt = "tablet" | "mobile" | "never";
export interface ColumnProps {
    columns?: Column[];
    builderBlock: BuilderBlock;
    space?: number;
    stackColumnsAt?: StackColumnsAt;
    reverseColumnsWhenStacked?: boolean;
}
import { BuilderBlock } from "../../types/builder-block";
declare const __propDef: {
    props: {
        space: ColumnProps["space"];
        columns: ColumnProps["columns"];
        stackColumnsAt: ColumnProps["stackColumnsAt"];
        reverseColumnsWhenStacked: ColumnProps["reverseColumnsWhenStacked"];
        builderBlock: ColumnProps["builderBlock"];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export type ColumnsProps = typeof __propDef.props;
export type ColumnsEvents = typeof __propDef.events;
export type ColumnsSlots = typeof __propDef.slots;
export default class Columns extends SvelteComponentTyped<ColumnsProps, ColumnsEvents, ColumnsSlots> {
}
export {};
