import { SvelteComponentTyped } from "svelte";
type ComponentOptions = {
    [index: string]: any;
    attributes?: {
        [index: string]: any;
    };
};
export interface RenderComponentProps {
    componentRef: any;
    componentOptions: ComponentOptions;
    blockChildren: BuilderBlock[];
    context: BuilderContextInterface;
}
import { BuilderBlock } from "../../types/builder-block.js";
import { BuilderContextInterface } from "../../context/types.js";
declare const __propDef: {
    props: {
        componentRef: RenderComponentProps["componentRef"];
        componentOptions: RenderComponentProps["componentOptions"];
        blockChildren: RenderComponentProps["blockChildren"];
        context: RenderComponentProps["context"];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export type RenderComponentProps = typeof __propDef.props;
export type RenderComponentEvents = typeof __propDef.events;
export type RenderComponentSlots = typeof __propDef.slots;
export default class RenderComponent extends SvelteComponentTyped<RenderComponentProps, RenderComponentEvents, RenderComponentSlots> {
}
export {};
